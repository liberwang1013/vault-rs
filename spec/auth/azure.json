{
  "openapi": "3.0.2",
  "info": {
    "title": "HashiCorp Vault API",
    "description": "HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.",
    "version": "1.13.0",
    "license": {
      "name": "Mozilla Public License 2.0",
      "url": "https://www.mozilla.org/en-US/MPL/2.0"
    }
  },
  "paths": {
    "/config": {
      "description": "Configures the Azure authentication backend.",
      "x-vault-createSupported": true,
      "get": {
        "tags": [
          "auth"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "auth"
        ],
        "responses": {
          "204": {
            "description": "empty body"
          }
        }
      }
    },
    "/login": {
      "description": "Authenticates Azure Managed Service Identities with Vault.",
      "x-vault-unauthenticated": true,
      "post": {
        "tags": [
          "auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/role": {
      "description": "Lists all the roles registered with the backend.",
      "get": {
        "tags": [
          "auth"
        ],
        "parameters": [
          {
            "name": "list",
            "description": "Must be set to `true`",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "true"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/role/{name}": {
      "description": "Register an role with the backend.",
      "parameters": [
        {
          "name": "name",
          "description": "Name of the role.",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "x-vault-createSupported": true,
      "get": {
        "tags": [
          "auth"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "auth"
        ],
        "responses": {
          "204": {
            "description": "empty body"
          }
        }
      }
    },
    "/rotate-root": {
      "description": "Attempt to rotate the root credentials used to communicate with Azure.",
      "post": {
        "tags": [
          "auth"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ConfigRequest": {
        "type": "object",
        "properties": {
          "client_id": {
            "type": "string",
            "description": "The OAuth2 client id to connection to Azure. This value can also be provided with the AZURE_CLIENT_ID environment variable.",
            "x-vault-displayAttrs": {
              "name": "Client ID"
            }
          },
          "client_secret": {
            "type": "string",
            "description": "The OAuth2 client secret to connection to Azure. This value can also be provided with the AZURE_CLIENT_SECRET environment variable."
          },
          "environment": {
            "type": "string",
            "description": "The Azure environment name. If not provided, AzurePublicCloud is used. This value can also be provided with the AZURE_ENVIRONMENT environment variable."
          },
          "resource": {
            "type": "string",
            "description": "The resource URL for the vault application in Azure Active Directory. This value can also be provided with the AZURE_AD_RESOURCE environment variable."
          },
          "root_password_ttl": {
            "type": "integer",
            "description": "The TTL of the root password in Azure. This can be either a number of seconds or a time formatted duration (ex: 24h, 48ds)",
            "format": "seconds",
            "default": 15768000000000000
          },
          "tenant_id": {
            "type": "string",
            "description": "The tenant id for the Azure Active Directory. This is sometimes referred to as Directory ID in AD. This value can also be provided with the AZURE_TENANT_ID environment variable.",
            "x-vault-displayAttrs": {
              "name": "Tenant ID"
            }
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "jwt": {
            "type": "string",
            "description": "A signed JWT"
          },
          "resource_group_name": {
            "type": "string",
            "description": "The resource group from the instance."
          },
          "resource_id": {
            "type": "string",
            "description": "The fully qualified ID of the resource, includingthe resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}. This value is ignored if vm_name or vmss_name is specified."
          },
          "role": {
            "type": "string",
            "description": "The token role."
          },
          "subscription_id": {
            "type": "string",
            "description": "The subscription id for the instance."
          },
          "vm_name": {
            "type": "string",
            "description": "The name of the virtual machine. This value is ignored if vmss_name is specified."
          },
          "vmss_name": {
            "type": "string",
            "description": "The name of the virtual machine scale set the instance is in."
          }
        }
      },
      "RoleRequest": {
        "type": "object",
        "properties": {
          "bound_group_ids": {
            "type": "array",
            "description": "Comma-separated list of group ids that login is restricted to.",
            "items": {
              "type": "string"
            }
          },
          "bound_locations": {
            "type": "array",
            "description": "Comma-separated list of locations that login is restricted to.",
            "items": {
              "type": "string"
            }
          },
          "bound_resource_groups": {
            "type": "array",
            "description": "Comma-separated list of resource groups that login is restricted to.",
            "items": {
              "type": "string"
            }
          },
          "bound_scale_sets": {
            "type": "array",
            "description": "Comma-separated list of scale sets that login is restricted to.",
            "items": {
              "type": "string"
            }
          },
          "bound_service_principal_ids": {
            "type": "array",
            "description": "Comma-separated list of service principal ids that login is restricted to.",
            "items": {
              "type": "string"
            }
          },
          "bound_subscription_ids": {
            "type": "array",
            "description": "Comma-separated list of subscription ids that login is restricted to.",
            "items": {
              "type": "string"
            }
          },
          "max_ttl": {
            "type": "integer",
            "description": "Use \"token_max_ttl\" instead. If this and \"token_max_ttl\" are both specified, only \"token_max_ttl\" will be used.",
            "format": "seconds",
            "deprecated": true
          },
          "num_uses": {
            "type": "integer",
            "description": "Use \"token_num_uses\" instead. If this and \"token_num_uses\" are both specified, only \"token_num_uses\" will be used.",
            "deprecated": true
          },
          "period": {
            "type": "integer",
            "description": "Use \"token_period\" instead. If this and \"token_period\" are both specified, only \"token_period\" will be used.",
            "format": "seconds",
            "deprecated": true
          },
          "policies": {
            "type": "array",
            "description": "Use \"token_policies\" instead. If this and \"token_policies\" are both specified, only \"token_policies\" will be used.",
            "items": {
              "type": "string"
            },
            "deprecated": true
          },
          "token_bound_cidrs": {
            "type": "array",
            "description": "Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.",
            "items": {
              "type": "string"
            },
            "x-vault-displayAttrs": {
              "name": "Generated Token's Bound CIDRs",
              "group": "Tokens"
            }
          },
          "token_explicit_max_ttl": {
            "type": "integer",
            "description": "If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.",
            "format": "seconds",
            "x-vault-displayAttrs": {
              "name": "Generated Token's Explicit Maximum TTL",
              "group": "Tokens"
            }
          },
          "token_max_ttl": {
            "type": "integer",
            "description": "The maximum lifetime of the generated token",
            "format": "seconds",
            "x-vault-displayAttrs": {
              "name": "Generated Token's Maximum TTL",
              "group": "Tokens"
            }
          },
          "token_no_default_policy": {
            "type": "boolean",
            "description": "If true, the 'default' policy will not automatically be added to generated tokens",
            "x-vault-displayAttrs": {
              "name": "Do Not Attach 'default' Policy To Generated Tokens",
              "group": "Tokens"
            }
          },
          "token_num_uses": {
            "type": "integer",
            "description": "The maximum number of times a token may be used, a value of zero means unlimited",
            "x-vault-displayAttrs": {
              "name": "Maximum Uses of Generated Tokens",
              "group": "Tokens"
            }
          },
          "token_period": {
            "type": "integer",
            "description": "If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. \"24h\").",
            "format": "seconds",
            "x-vault-displayAttrs": {
              "name": "Generated Token's Period",
              "group": "Tokens"
            }
          },
          "token_policies": {
            "type": "array",
            "description": "Comma-separated list of policies",
            "items": {
              "type": "string"
            },
            "x-vault-displayAttrs": {
              "name": "Generated Token's Policies",
              "group": "Tokens"
            }
          },
          "token_ttl": {
            "type": "integer",
            "description": "The initial ttl of the token to generate",
            "format": "seconds",
            "x-vault-displayAttrs": {
              "name": "Generated Token's Initial TTL",
              "group": "Tokens"
            }
          },
          "token_type": {
            "type": "string",
            "description": "The type of token to generate, service or batch",
            "default": "default-service",
            "x-vault-displayAttrs": {
              "name": "Generated Token's Type",
              "group": "Tokens"
            }
          },
          "ttl": {
            "type": "integer",
            "description": "Use \"token_ttl\" instead. If this and \"token_ttl\" are both specified, only \"token_ttl\" will be used.",
            "format": "seconds",
            "deprecated": true
          }
        }
      }
    }
  }
}
