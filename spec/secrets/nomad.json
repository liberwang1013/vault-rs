{
  "openapi": "3.0.2",
  "info": {
    "title": "HashiCorp Vault API",
    "description": "HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.",
    "version": "1.13.0",
    "license": {
      "name": "Mozilla Public License 2.0",
      "url": "https://www.mozilla.org/en-US/MPL/2.0"
    }
  },
  "paths": {
    "/config/access": {
      "x-vault-createSupported": true,
      "get": {
        "tags": [
          "secrets"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "secrets"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigAccessRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "secrets"
        ],
        "responses": {
          "204": {
            "description": "empty body"
          }
        }
      }
    },
    "/config/lease": {
      "description": "Configure the lease parameters for generated tokens",
      "get": {
        "summary": "Configure the lease parameters for generated tokens",
        "tags": [
          "secrets"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "summary": "Configure the lease parameters for generated tokens",
        "tags": [
          "secrets"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigLeaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "summary": "Configure the lease parameters for generated tokens",
        "tags": [
          "secrets"
        ],
        "responses": {
          "204": {
            "description": "empty body"
          }
        }
      }
    },
    "/creds/{name}": {
      "parameters": [
        {
          "name": "name",
          "description": "Name of the role",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "get": {
        "tags": [
          "secrets"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/role": {
      "get": {
        "tags": [
          "secrets"
        ],
        "parameters": [
          {
            "name": "list",
            "description": "Must be set to `true`",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "true"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/role/{name}": {
      "parameters": [
        {
          "name": "name",
          "description": "Name of the role",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "x-vault-createSupported": true,
      "get": {
        "tags": [
          "secrets"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "secrets"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "secrets"
        ],
        "responses": {
          "204": {
            "description": "empty body"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ConfigAccessRequest": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "Nomad server address"
          },
          "ca_cert": {
            "type": "string",
            "description": "CA certificate to use when verifying Nomad server certificate, must be x509 PEM encoded."
          },
          "client_cert": {
            "type": "string",
            "description": "Client certificate used for Nomad's TLS communication, must be x509 PEM encoded and if this is set you need to also set client_key."
          },
          "client_key": {
            "type": "string",
            "description": "Client key used for Nomad's TLS communication, must be x509 PEM encoded and if this is set you need to also set client_cert."
          },
          "max_token_name_length": {
            "type": "integer",
            "description": "Max length for name of generated Nomad tokens"
          },
          "token": {
            "type": "string",
            "description": "Token for API calls"
          }
        }
      },
      "ConfigLeaseRequest": {
        "type": "object",
        "properties": {
          "max_ttl": {
            "type": "integer",
            "description": "Duration after which the issued token should not be allowed to be renewed",
            "format": "seconds"
          },
          "ttl": {
            "type": "integer",
            "description": "Duration before which the issued token needs renewal",
            "format": "seconds"
          }
        }
      },
      "RoleRequest": {
        "type": "object",
        "properties": {
          "global": {
            "type": "boolean",
            "description": "Boolean value describing if the token should be global or not. Defaults to false."
          },
          "policies": {
            "type": "array",
            "description": "Comma-separated string or list of policies as previously created in Nomad. Required for 'client' token.",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string",
            "description": "Which type of token to create: 'client' or 'management'. If a 'management' token, the \"policies\" parameter is not required. Defaults to 'client'.",
            "default": "client"
          }
        }
      }
    }
  }
}
