{
  "openapi": "3.0.2",
  "info": {
    "title": "HashiCorp Vault API",
    "description": "HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.",
    "version": "1.13.0",
    "license": {
      "name": "Mozilla Public License 2.0",
      "url": "https://www.mozilla.org/en-US/MPL/2.0"
    }
  },
  "paths": {
    "/check": {
      "description": "Checks the Kubernetes configuration is valid.",
      "get": {
        "tags": [
          "secrets"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/config": {
      "description": "Configure the Kubernetes secret engine plugin.",
      "x-vault-createSupported": true,
      "get": {
        "tags": [
          "secrets"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "secrets"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "secrets"
        ],
        "responses": {
          "204": {
            "description": "empty body"
          }
        }
      }
    },
    "/creds/{name}": {
      "description": "Request Kubernetes service account credentials for a given Vault role.",
      "parameters": [
        {
          "name": "name",
          "description": "Name of the Vault role",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "post": {
        "tags": [
          "secrets"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CredsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/roles": {
      "description": "List the existing roles in this secrets engine.",
      "get": {
        "tags": [
          "secrets"
        ],
        "parameters": [
          {
            "name": "list",
            "description": "Must be set to `true`",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "true"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/roles/{name}": {
      "description": "Manage the roles that can be created with this secrets engine.",
      "parameters": [
        {
          "name": "name",
          "description": "Name of the role",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "x-vault-createSupported": true,
      "get": {
        "tags": [
          "secrets"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "secrets"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RolesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "secrets"
        ],
        "responses": {
          "204": {
            "description": "empty body"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ConfigRequest": {
        "type": "object",
        "properties": {
          "disable_local_ca_jwt": {
            "type": "boolean",
            "description": "Disable defaulting to the local CA certificate and service account JWT when running in a Kubernetes pod.",
            "default": false,
            "x-vault-displayAttrs": {
              "name": "Disable use of local CA and service account JWT"
            }
          },
          "kubernetes_ca_cert": {
            "type": "string",
            "description": "PEM encoded CA certificate to use to verify the Kubernetes API server certificate. Defaults to the local pod's CA if found.",
            "x-vault-displayAttrs": {
              "name": "Kubernetes CA Certificate"
            }
          },
          "kubernetes_host": {
            "type": "string",
            "description": "Kubernetes API URL to connect to. Defaults to https://$KUBERNETES_SERVICE_HOST:KUBERNETES_SERVICE_PORT if those environment variables are set.",
            "x-vault-displayAttrs": {
              "name": "Kubernetes API URL"
            }
          },
          "service_account_jwt": {
            "type": "string",
            "description": "The JSON web token of the service account used by the secret engine to manage Kubernetes credentials. Defaults to the local pod's JWT if found.",
            "x-vault-displayAttrs": {
              "name": "Kubernetes API JWT"
            }
          }
        }
      },
      "CredsRequest": {
        "type": "object",
        "properties": {
          "cluster_role_binding": {
            "type": "boolean",
            "description": "If true, generate a ClusterRoleBinding to grant permissions across the whole cluster instead of within a namespace. Requires the Vault role to have kubernetes_role_type set to ClusterRole."
          },
          "kubernetes_namespace": {
            "type": "string",
            "description": "The name of the Kubernetes namespace in which to generate the credentials"
          },
          "ttl": {
            "type": "integer",
            "description": "The TTL of the generated credentials",
            "format": "seconds"
          }
        },
        "required": [
          "kubernetes_namespace"
        ]
      },
      "RolesRequest": {
        "type": "object",
        "properties": {
          "allowed_kubernetes_namespace_selector": {
            "type": "string",
            "description": "A label selector for Kubernetes namespaces in which credentials can be generated. Accepts either a JSON or YAML object. If set with allowed_kubernetes_namespaces, the conditions are conjuncted."
          },
          "allowed_kubernetes_namespaces": {
            "type": "array",
            "description": "A list of the Kubernetes namespaces in which credentials can be generated. If set to \"*\" all namespaces are allowed.",
            "items": {
              "type": "string"
            }
          },
          "extra_annotations": {
            "type": "object",
            "description": "Additional annotations to apply to all generated Kubernetes objects.",
            "format": "kvpairs"
          },
          "extra_labels": {
            "type": "object",
            "description": "Additional labels to apply to all generated Kubernetes objects.",
            "format": "kvpairs"
          },
          "generated_role_rules": {
            "type": "string",
            "description": "The Role or ClusterRole rules to use when generating a role. Accepts either a JSON or YAML object. If set, the entire chain of Kubernetes objects will be generated."
          },
          "kubernetes_role_name": {
            "type": "string",
            "description": "The pre-existing Role or ClusterRole to bind a generated service account to. If set, Kubernetes token, service account, and role binding objects will be created."
          },
          "kubernetes_role_type": {
            "type": "string",
            "description": "Specifies whether the Kubernetes role is a Role or ClusterRole.",
            "default": "Role"
          },
          "name_template": {
            "type": "string",
            "description": "The name template to use when generating service accounts, roles and role bindings. If unset, a default template is used."
          },
          "service_account_name": {
            "type": "string",
            "description": "The pre-existing service account to generate tokens for. Mutually exclusive with all role parameters. If set, only a Kubernetes service account token will be created."
          },
          "token_default_ttl": {
            "type": "integer",
            "description": "The default ttl for generated Kubernetes service account tokens. If not set or set to 0, will use system default.",
            "format": "seconds"
          },
          "token_max_ttl": {
            "type": "integer",
            "description": "The maximum ttl for generated Kubernetes service account tokens. If not set or set to 0, will use system default.",
            "format": "seconds"
          }
        }
      }
    }
  }
}
