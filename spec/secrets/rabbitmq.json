{
  "openapi": "3.0.2",
  "info": {
    "title": "HashiCorp Vault API",
    "description": "HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.",
    "version": "1.13.0",
    "license": {
      "name": "Mozilla Public License 2.0",
      "url": "https://www.mozilla.org/en-US/MPL/2.0"
    }
  },
  "paths": {
    "/config/connection": {
      "description": "Configure the connection URI, username, and password to talk to RabbitMQ management HTTP API.",
      "post": {
        "summary": "Configure the connection URI, username, and password to talk to RabbitMQ management HTTP API.",
        "tags": [
          "secrets"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigConnectionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/config/lease": {
      "description": "Configure the lease parameters for generated credentials",
      "get": {
        "summary": "Configure the lease parameters for generated credentials",
        "tags": [
          "secrets"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "summary": "Configure the lease parameters for generated credentials",
        "tags": [
          "secrets"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigLeaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/creds/{name}": {
      "description": "Request RabbitMQ credentials for a certain role.",
      "parameters": [
        {
          "name": "name",
          "description": "Name of the role.",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "get": {
        "summary": "Request RabbitMQ credentials for a certain role.",
        "tags": [
          "secrets"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/roles": {
      "description": "Manage the roles that can be created with this backend.",
      "get": {
        "summary": "Manage the roles that can be created with this backend.",
        "tags": [
          "secrets"
        ],
        "parameters": [
          {
            "name": "list",
            "description": "Must be set to `true`",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "true"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/roles/{name}": {
      "description": "Manage the roles that can be created with this backend.",
      "parameters": [
        {
          "name": "name",
          "description": "Name of the role.",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "get": {
        "summary": "Manage the roles that can be created with this backend.",
        "tags": [
          "secrets"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "summary": "Manage the roles that can be created with this backend.",
        "tags": [
          "secrets"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RolesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "summary": "Manage the roles that can be created with this backend.",
        "tags": [
          "secrets"
        ],
        "responses": {
          "204": {
            "description": "empty body"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ConfigConnectionRequest": {
        "type": "object",
        "properties": {
          "connection_uri": {
            "type": "string",
            "description": "RabbitMQ Management URI"
          },
          "password": {
            "type": "string",
            "description": "Password of the provided RabbitMQ management user"
          },
          "password_policy": {
            "type": "string",
            "description": "Name of the password policy to use to generate passwords for dynamic credentials."
          },
          "username": {
            "type": "string",
            "description": "Username of a RabbitMQ management administrator"
          },
          "username_template": {
            "type": "string",
            "description": "Template describing how dynamic usernames are generated."
          },
          "verify_connection": {
            "type": "boolean",
            "description": "If set, connection_uri is verified by actually connecting to the RabbitMQ management API",
            "default": true
          }
        }
      },
      "ConfigLeaseRequest": {
        "type": "object",
        "properties": {
          "max_ttl": {
            "type": "integer",
            "description": "Duration after which the issued credentials should not be allowed to be renewed",
            "format": "seconds",
            "default": 0
          },
          "ttl": {
            "type": "integer",
            "description": "Duration before which the issued credentials needs renewal",
            "format": "seconds",
            "default": 0
          }
        }
      },
      "RolesRequest": {
        "type": "object",
        "properties": {
          "tags": {
            "type": "string",
            "description": "Comma-separated list of tags for this role."
          },
          "vhost_topics": {
            "type": "string",
            "description": "A nested map of virtual hosts and exchanges to topic permissions."
          },
          "vhosts": {
            "type": "string",
            "description": "A map of virtual hosts to permissions."
          }
        }
      }
    }
  }
}
