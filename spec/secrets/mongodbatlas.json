{
  "openapi": "3.0.2",
  "info": {
    "title": "HashiCorp Vault API",
    "description": "HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.",
    "version": "1.13.0",
    "license": {
      "name": "Mozilla Public License 2.0",
      "url": "https://www.mozilla.org/en-US/MPL/2.0"
    }
  },
  "paths": {
    "/config": {
      "description": "Configure the credentials that are used to manage Database Users.",
      "get": {
        "summary": "Configure the  credentials that are used to manage Database Users.",
        "tags": [
          "secrets"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "summary": "Configure the  credentials that are used to manage Database Users.",
        "tags": [
          "secrets"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/creds/{name}": {
      "description": "Generate MongoDB Atlas Programmatic API from a specific Vault role.",
      "parameters": [
        {
          "name": "name",
          "description": "Name of the role",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "get": {
        "summary": "Generate MongoDB Atlas Programmatic API from a specific Vault role.",
        "tags": [
          "secrets"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "summary": "Generate MongoDB Atlas Programmatic API from a specific Vault role.",
        "tags": [
          "secrets"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/roles": {
      "description": "List the existing roles in this backend",
      "get": {
        "summary": "List the existing roles in this backend",
        "tags": [
          "secrets"
        ],
        "parameters": [
          {
            "name": "list",
            "description": "Must be set to `true`",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "true"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/roles/{name}": {
      "description": "Manage the roles used to generate MongoDB Atlas Programmatic API Keys.",
      "parameters": [
        {
          "name": "name",
          "description": "Name of the Roles",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "get": {
        "summary": "Manage the roles used to generate MongoDB Atlas Programmatic API Keys.",
        "tags": [
          "secrets"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "summary": "Manage the roles used to generate MongoDB Atlas Programmatic API Keys.",
        "tags": [
          "secrets"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RolesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "summary": "Manage the roles used to generate MongoDB Atlas Programmatic API Keys.",
        "tags": [
          "secrets"
        ],
        "responses": {
          "204": {
            "description": "empty body"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ConfigRequest": {
        "type": "object",
        "properties": {
          "private_key": {
            "type": "string",
            "description": "MongoDB Atlas Programmatic Private Key",
            "x-vault-displayAttrs": {
              "sensitive": true
            }
          },
          "public_key": {
            "type": "string",
            "description": "MongoDB Atlas Programmatic Public Key"
          }
        },
        "required": [
          "public_key",
          "private_key"
        ]
      },
      "RolesRequest": {
        "type": "object",
        "properties": {
          "cidr_blocks": {
            "type": "array",
            "description": "Access list entry in CIDR notation to be added for the API key. Optional for organization and project keys.",
            "items": {
              "type": "string"
            }
          },
          "ip_addresses": {
            "type": "array",
            "description": "IP address to be added to the access list for the API key. Optional for organization and project keys.",
            "items": {
              "type": "string"
            }
          },
          "max_ttl": {
            "type": "integer",
            "description": "The maximum allowed lifetime of credentials issued using this role.",
            "format": "seconds"
          },
          "organization_id": {
            "type": "string",
            "description": "Organization ID required for an organization API key"
          },
          "project_id": {
            "type": "string",
            "description": "Project ID the project API key belongs to."
          },
          "project_roles": {
            "type": "array",
            "description": "Roles assigned when an organization API Key is assigned to a project API key",
            "items": {
              "type": "string"
            }
          },
          "roles": {
            "type": "array",
            "description": "List of roles that the API Key should be granted. A minimum of one role must be provided. Any roles provided must be valid for the assigned Project, required for organization and project keys.",
            "items": {
              "type": "string"
            }
          },
          "ttl": {
            "type": "integer",
            "description": "Duration in seconds after which the issued credential should expire. Defaults to 0, in which case the value will fallback to the system/mount defaults.",
            "format": "seconds"
          }
        },
        "required": [
          "roles"
        ]
      }
    }
  }
}
