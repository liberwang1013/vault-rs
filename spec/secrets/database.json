{
  "openapi": "3.0.2",
  "info": {
    "title": "HashiCorp Vault API",
    "description": "HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.",
    "version": "1.13.0",
    "license": {
      "name": "Mozilla Public License 2.0",
      "url": "https://www.mozilla.org/en-US/MPL/2.0"
    }
  },
  "paths": {
    "/config": {
      "description": "Configure connection details to a database plugin.",
      "get": {
        "summary": "Configure connection details to a database plugin.",
        "tags": [
          "secrets"
        ],
        "parameters": [
          {
            "name": "list",
            "description": "Must be set to `true`",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "true"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/config/{name}": {
      "description": "Configure connection details to a database plugin.",
      "parameters": [
        {
          "name": "name",
          "description": "Name of this database connection",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "x-vault-createSupported": true,
      "get": {
        "summary": "Configure connection details to a database plugin.",
        "tags": [
          "secrets"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "summary": "Configure connection details to a database plugin.",
        "tags": [
          "secrets"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "summary": "Configure connection details to a database plugin.",
        "tags": [
          "secrets"
        ],
        "responses": {
          "204": {
            "description": "empty body"
          }
        }
      }
    },
    "/creds/{name}": {
      "description": "Request database credentials for a certain role.",
      "parameters": [
        {
          "name": "name",
          "description": "Name of the role.",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "get": {
        "summary": "Request database credentials for a certain role.",
        "tags": [
          "secrets"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/reset/{name}": {
      "description": "Resets a database plugin.",
      "parameters": [
        {
          "name": "name",
          "description": "Name of this database connection",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "post": {
        "summary": "Resets a database plugin.",
        "tags": [
          "secrets"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/roles": {
      "description": "Manage the roles that can be created with this backend.",
      "get": {
        "summary": "Manage the roles that can be created with this backend.",
        "tags": [
          "secrets"
        ],
        "parameters": [
          {
            "name": "list",
            "description": "Must be set to `true`",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "true"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/roles/{name}": {
      "description": "Manage the roles that can be created with this backend.",
      "parameters": [
        {
          "name": "name",
          "description": "Name of the role.",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "x-vault-createSupported": true,
      "get": {
        "summary": "Manage the roles that can be created with this backend.",
        "tags": [
          "secrets"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "summary": "Manage the roles that can be created with this backend.",
        "tags": [
          "secrets"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RolesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "summary": "Manage the roles that can be created with this backend.",
        "tags": [
          "secrets"
        ],
        "responses": {
          "204": {
            "description": "empty body"
          }
        }
      }
    },
    "/rotate-role/{name}": {
      "description": "Request to rotate the credentials for a static user account.",
      "parameters": [
        {
          "name": "name",
          "description": "Name of the static role",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "post": {
        "tags": [
          "secrets"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rotate-root/{name}": {
      "description": "Request to rotate the root credentials for a certain database connection.",
      "parameters": [
        {
          "name": "name",
          "description": "Name of this database connection",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "post": {
        "tags": [
          "secrets"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/static-creds/{name}": {
      "description": "Request database credentials for a certain static role. These credentials are rotated periodically.",
      "parameters": [
        {
          "name": "name",
          "description": "Name of the static role.",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "get": {
        "summary": "Request database credentials for a certain static role. These credentials are\nrotated periodically.",
        "tags": [
          "secrets"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/static-roles": {
      "description": "Manage the static roles that can be created with this backend.",
      "get": {
        "summary": "Manage the static roles that can be created with this backend.",
        "tags": [
          "secrets"
        ],
        "parameters": [
          {
            "name": "list",
            "description": "Must be set to `true`",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "true"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/static-roles/{name}": {
      "description": "Manage the static roles that can be created with this backend.",
      "parameters": [
        {
          "name": "name",
          "description": "Name of the role.",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "x-vault-createSupported": true,
      "get": {
        "summary": "Manage the static roles that can be created with this backend.",
        "tags": [
          "secrets"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "summary": "Manage the static roles that can be created with this backend.",
        "tags": [
          "secrets"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StaticRolesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "summary": "Manage the static roles that can be created with this backend.",
        "tags": [
          "secrets"
        ],
        "responses": {
          "204": {
            "description": "empty body"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ConfigRequest": {
        "type": "object",
        "properties": {
          "allowed_roles": {
            "type": "array",
            "description": "Comma separated string or array of the role names allowed to get creds from this database connection. If empty no roles are allowed. If \"*\" all roles are allowed.",
            "items": {
              "type": "string"
            }
          },
          "password_policy": {
            "type": "string",
            "description": "Password policy to use when generating passwords."
          },
          "plugin_name": {
            "type": "string",
            "description": "The name of a builtin or previously registered plugin known to vault. This endpoint will create an instance of that plugin type."
          },
          "plugin_version": {
            "type": "string",
            "description": "The version of the plugin to use."
          },
          "root_rotation_statements": {
            "type": "array",
            "description": "Specifies the database statements to be executed to rotate the root user's credentials. See the plugin's API page for more information on support and formatting for this parameter.",
            "items": {
              "type": "string"
            }
          },
          "verify_connection": {
            "type": "boolean",
            "description": "If true, the connection details are verified by actually connecting to the database. Defaults to true.",
            "default": true
          }
        }
      },
      "RolesRequest": {
        "type": "object",
        "properties": {
          "creation_statements": {
            "type": "array",
            "description": "Specifies the database statements executed to create and configure a user. See the plugin's API page for more information on support and formatting for this parameter.",
            "items": {
              "type": "string"
            }
          },
          "credential_config": {
            "type": "object",
            "description": "The configuration for the given credential_type.",
            "format": "kvpairs"
          },
          "credential_type": {
            "type": "string",
            "description": "The type of credential to manage. Options include: 'password', 'rsa_private_key'. Defaults to 'password'.",
            "default": "password"
          },
          "db_name": {
            "type": "string",
            "description": "Name of the database this role acts on."
          },
          "default_ttl": {
            "type": "integer",
            "description": "Default ttl for role.",
            "format": "seconds"
          },
          "max_ttl": {
            "type": "integer",
            "description": "Maximum time a credential is valid for",
            "format": "seconds"
          },
          "renew_statements": {
            "type": "array",
            "description": "Specifies the database statements to be executed to renew a user. Not every plugin type will support this functionality. See the plugin's API page for more information on support and formatting for this parameter.",
            "items": {
              "type": "string"
            }
          },
          "revocation_statements": {
            "type": "array",
            "description": "Specifies the database statements to be executed to revoke a user. See the plugin's API page for more information on support and formatting for this parameter.",
            "items": {
              "type": "string"
            }
          },
          "rollback_statements": {
            "type": "array",
            "description": "Specifies the database statements to be executed rollback a create operation in the event of an error. Not every plugin type will support this functionality. See the plugin's API page for more information on support and formatting for this parameter.",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "StaticRolesRequest": {
        "type": "object",
        "properties": {
          "credential_config": {
            "type": "object",
            "description": "The configuration for the given credential_type.",
            "format": "kvpairs"
          },
          "credential_type": {
            "type": "string",
            "description": "The type of credential to manage. Options include: 'password', 'rsa_private_key'. Defaults to 'password'.",
            "default": "password"
          },
          "db_name": {
            "type": "string",
            "description": "Name of the database this role acts on."
          },
          "rotation_period": {
            "type": "integer",
            "description": "Period for automatic credential rotation of the given username. Not valid unless used with \"username\".",
            "format": "seconds"
          },
          "rotation_statements": {
            "type": "array",
            "description": "Specifies the database statements to be executed to rotate the accounts credentials. Not every plugin type will support this functionality. See the plugin's API page for more information on support and formatting for this parameter.",
            "items": {
              "type": "string"
            }
          },
          "username": {
            "type": "string",
            "description": "Name of the static user account for Vault to manage. Requires \"rotation_period\" to be specified"
          }
        }
      }
    }
  }
}
